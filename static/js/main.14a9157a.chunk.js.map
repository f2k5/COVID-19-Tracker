{"version":3,"sources":["components/Worldwide.jsx","countries.js","components/CountrySpecific.jsx","components/Copyright.jsx","components/App.jsx","index.js"],"names":["Worldwide","useState","worldwide_covid19_data","update_worldwide_covid19_data","numberWithCommas","x","toString","replace","useEffect","axios","get","then","response","data","console","log","catch","error","date","Date","updated","className","cases","active","recovered","todayRecovered","critical","deaths","todayDeaths","countries","CountrySpecific","country_covid19_data","update_country_covid19_data","countryName","updateCountryName","buttonPressed","updateButtonPress","forEach","i","country","data_received","class","type","placeholder","onChange","event","userCountryName","target","value","charAt","toUpperCase","slice","length","toLowerCase","onClick","includes","continent","Copyright","year","getFullYear","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA0DeA,MAvDf,WAAuB,IAAD,EAE8CC,mBAAS,IAFvD,mBAEXC,EAFW,KAEaC,EAFb,KAIlB,SAASC,EAAiBC,GACtB,GAAIA,EACA,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,KAI7DC,qBAAU,WACNC,IAAMC,IAAI,6CACTC,MAAK,SAASC,GACXT,EAA8BS,EAASC,MACvCC,QAAQC,IAAIH,EAASC,SAExBG,OAAM,SAASC,GACZH,QAAQC,IAAIE,QAEjB,IAEH,IAAIC,EAAO,IAAIC,KAAKjB,EAAuBkB,SAASd,WAEpD,OACI,sBAAKe,UAAY,kBAAjB,UACI,oBAAIA,UAAY,kBAAhB,uBACA,qBAAIA,UAAY,wBAAhB,2BAAuDH,KACvD,wBAAOG,UAAY,kBAAnB,UACI,+BACI,uCACA,wCACA,2CACA,iDACA,0CACA,wCACA,iDAGJ,+BACI,6BAAKjB,EAAiBF,EAAuBoB,SAC7C,6BAAKlB,EAAiBF,EAAuBqB,UAC7C,6BAAKnB,EAAiBF,EAAuBsB,aAC7C,6BAAKpB,EAAiBF,EAAuBuB,kBAC7C,6BAAKrB,EAAiBF,EAAuBwB,YAC7C,6BAAKtB,EAAiBF,EAAuByB,UAC7C,6BAAKvB,EAAiBF,EAAuB0B,qBAGrD,uBAxBJ,IAwBW,uBACP,oBAAIP,UAAY,SAChB,uBA1BJ,IA0BW,2BCoFJQ,EAzIG,CAAC,cAAe,UAAW,UAAW,UAAW,SAAU,WAAY,sBAAuB,YAAa,UAAW,QAAS,YACjJ,UAAW,aAAc,UAAW,UAAW,aAAc,WAAY,UAAW,UAAW,SAAU,QAAS,UAAW,SAAU,UAAW,SAClJ,WAAY,SAAU,yBAA0B,SAAU,WAAY,eAAgB,UAAW,aAAc,WAAY,WAAY,SAAU,wBACjJ,iBAAkB,2BAA4B,OAAQ,kBAAmB,QAAS,QAAS,WAAY,UAAW,QAAS,aAAc,UAAW,OAAQ,aAC5J,SAAU,UAAW,mBAAiB,MAAO,UAAW,mBAAoB,WAAY,WAAY,qBAAsB,UAAW,QAAS,cAAe,oBAC7J,UAAW,UAAW,WAAY,8BAA+B,gBAAiB,OAAQ,UAAW,SAAU,gBAAiB,mBAAoB,QAAS,SAC7J,UAAW,UAAW,QAAS,YAAa,SAAU,YAAa,UAAW,aAAc,YAAY,SAAS,gBAAiB,SAAU,QAAS,gCACrJ,WAPkB,CAQjB,YACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,aACA,QACA,SACA,aACA,mCACA,SACA,UACA,UACA,UACA,yBACA,gBACA,YACA,aACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,aACA,YACA,UACA,SACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,UACA,QACA,cACA,gBACA,cACA,YACA,QACA,UACA,SACA,OACA,WACA,YACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,QACA,UACA,SACA,SACA,aACA,WACA,wBACA,cACA,eACA,wBACA,mCACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,eACA,WACA,WACA,kBACA,UACA,eACA,cACA,QACA,YACA,YACA,QACA,WACA,YACA,SACA,cACA,uBACA,SACA,aACA,WACA,WACA,cACA,OACA,sBACA,UACA,SACA,2BACA,MACA,KACA,MACA,SACA,UACA,UACA,aACA,YACA,UACA,oBACA,iBACA,QACA,SACA,YCrDcC,MA9Ef,WAA6B,IAAD,EACoC7B,mBAAS,IAD7C,mBACjB8B,EADiB,KACKC,EADL,OAEiB/B,mBAAS,IAF1B,mBAEjBgC,EAFiB,KAEJC,EAFI,OAGmBjC,oBAAS,GAH5B,mBAGjBkC,EAHiB,KAGFC,EAHE,KAKxB,SAAShC,EAAiBC,GACtB,GAAIA,EACA,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,KAgB7DC,qBAAU,WACNC,IAAMC,IAAI,oDACTC,MAAK,SAASC,GACXA,EAASC,KAAKwB,SAAQ,SAAChC,EAAGiC,GACtB,GAAIL,IAAgB5B,EAAEkC,QAAS,CAC3B,IAAMC,EAAgB5B,EAASC,KAAKyB,GACpCN,EAA4BQ,UAIvCxB,OAAM,SAASC,GACZH,QAAQC,IAAIE,QAEjB,CAACgB,IAEJ,IAAIf,EAAO,IAAIC,KAAKY,EAAqBX,SAASd,WAElD,OACI,sBAAKe,UAAY,uBAAjB,UACI,uBAAOoB,MAAQ,YAAYC,KAAK,OAAOC,YAAY,uBAAuBC,SA/BlF,SAAoBC,GAChB,IAAIC,EAAkBD,EAAME,OAAOC,MACnCF,EAAkBA,EAAgBG,OAAO,GAAGC,cAAgBJ,EAAgBK,MAAM,EAAGL,EAAgBM,QAAQC,cAC7GnB,EAAkBY,GAClBhC,QAAQC,IAAI+B,GACZV,GAAkB,IA0BiFY,MAAOf,IACtG,wBAAQQ,MAAQ,YAAYa,QAxBpC,WACIlB,GAAkB,IAuBd,oBACED,GAAiBN,EAAU0B,SAAStB,GAEtC,sBAAKZ,UAAY,kBAAjB,UAEI,qBAAIA,UAAY,kBAAhB,UAAmCU,EAAqBQ,QAAxD,KAAmER,EAAqByB,UAAxF,OACA,qBAAInC,UAAY,wBAAhB,2BAAuDH,KACvD,wBAAOG,UAAY,kBAAnB,UACI,+BACI,uCACA,wCACA,2CACA,iDACA,0CACA,wCACA,iDAGJ,+BACI,6BAAKjB,EAAiB2B,EAAqBT,SAC3C,6BAAKlB,EAAiB2B,EAAqBR,UAC3C,6BAAKnB,EAAiB2B,EAAqBP,aAC3C,6BAAKpB,EAAiB2B,EAAqBN,kBAC3C,6BAAKrB,EAAiB2B,EAAqBL,YAC3C,6BAAKtB,EAAiB2B,EAAqBJ,UAC3C,6BAAKvB,EAAiB2B,EAAqBH,wBAKvD,oBAAIP,UAAY,UAAhB,wECjEGoC,MAVf,WACI,IAAIC,GAAO,IAAIvC,MAAOwC,cAEtB,OADA7C,QAAQC,IAAI2C,GAER,8BACI,2FAAsDA,EAAtD,sBCYGE,MAbf,WACI,OACI,gCACI,oBAAIvC,UAAY,UAAhB,8BACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,iCACI,cAAC,EAAD,UCRhBwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.14a9157a.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\n\nfunction Worldwide () {\n\n    const [worldwide_covid19_data, update_worldwide_covid19_data] = useState(\"\");\n\n    function numberWithCommas(x) {\n        if (x) {\n            return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"); \n        }\n    }\n\n    useEffect(() => {\n        axios.get(\"https://corona.lmao.ninja/v3/covid-19/all\")\n        .then(function(response) {\n            update_worldwide_covid19_data(response.data)\n            console.log(response.data);\n        })\n        .catch(function(error) {\n            console.log(error);\n        });\n    }, []);\n\n    var date = new Date(worldwide_covid19_data.updated).toString();\n\n    return (\n        <div className = \"worldinfo-table\">           \n            <h1 className = \"section-heading\" >Worldwide</h1>\n            <h2 className = \"worldinfo-latest-time\">Last Updated: {date}</h2>\n            <table className = \"table-container\">\n                <tr>\n                    <td>Cases</td>\n                    <td>Active</td>\n                    <td>Recovered</td>\n                    <td>Recovered today</td>\n                    <td>Critical</td>\n                    <td>Deaths</td>\n                    <td>Deaths today</td>\n                </tr>\n\n                <tr>\n                    <td>{numberWithCommas(worldwide_covid19_data.cases)}</td>\n                    <td>{numberWithCommas(worldwide_covid19_data.active)}</td>\n                    <td>{numberWithCommas(worldwide_covid19_data.recovered)}</td>\n                    <td>{numberWithCommas(worldwide_covid19_data.todayRecovered)}</td>\n                    <td>{numberWithCommas(worldwide_covid19_data.critical)}</td>\n                    <td>{numberWithCommas(worldwide_covid19_data.deaths)}</td>\n                    <td>{numberWithCommas(worldwide_covid19_data.todayDeaths)}</td>\n                </tr>\n            </table>\n            <br /> <br />\n            <hr className = \"line\"></hr>\n            <br /> <br />\n        </div>\n    );\n}\n\nexport default Worldwide;","const countries = [\"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Australia\", \n\"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia\", \n\"Botswana\", \"Brazil\", \"British Virgin Islands\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cabo Verde\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Caribbean Netherlands\", \n\"Cayman Islands\", \"Central African Republic\", \"Chad\", \"Channel Islands\", \"Chile\", \"China\", \"Colombia\", \"Comoros\", \"Congo\", \"Costa Rica\", \"Croatia\", \"Cuba\", \"Curaçao\", \n\"Cyprus\", \"Czechia\", \"Côte d'Ivoire\", \"DRC\", \"Denmark\", \"Diamond Princess\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \n\"Eritrea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands (Malvinas)\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Guiana\", \"French Polynesia\", \"Gabon\", \"Gambia\", \n\"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guadeloupe\", \"Guatemala\",\"Guinea\",\"Guinea-Bissau\", \"Guyana\", \"Haiti\", \"Holy See (Vatican City State)\", \n\"Honduras\",\n,\"Hong Kong\"\n,\"Hungary\"\n,\"Iceland\"\n,\"India\"\n,\"Indonesia\"\n,\"Iran\"\n,\"Iraq\"\n,\"Ireland\"\n,\"Isle of Man\"\n,\"Israel\"\n,\"Italy\"\n,\"Jamaica\"\n,\"Japan\"\n,\"Jordan\"\n,\"Kazakhstan\"\n,\"Kenya\"\n,\"Kuwait\"\n,\"Kyrgyzstan\"\n,\"Lao People's Democratic Republic\"\n,\"Latvia\"\n,\"Lebanon\"\n,\"Lesotho\"\n,\"Liberia\"\n,\"Libyan Arab Jamahiriya\"\n,\"Liechtenstein\"\n,\"Lithuania\"\n,\"Luxembourg\"\n,\"MS Zaandam\"\n,\"Macao\"\n,\"Macedonia\"\n,\"Madagascar\"\n,\"Malawi\"\n,\"Malaysia\"\n,\"Maldives\"\n,\"Mali\"\n,\"Malta\"\n,\"Marshall Islands\"\n,\"Martinique\"\n,\"Mauritania\"\n,\"Mauritius\"\n,\"Mayotte\"\n,\"Mexico\"\n,\"Moldova\"\n,\"Monaco\"\n,\"Mongolia\"\n,\"Montenegro\"\n,\"Montserrat\"\n,\"Morocco\"\n,\"Mozambique\"\n,\"Myanmar\"\n,\"Namibia\"\n,\"Nepal\"\n,\"Netherlands\"\n,\"New Caledonia\"\n,\"New Zealand\"\n,\"Nicaragua\"\n,\"Niger\"\n,\"Nigeria\"\n,\"Norway\"\n,\"Oman\"\n,\"Pakistan\"\n,\"Palestine\"\n,\"Panama\"\n,\"Papua New Guinea\"\n,\"Paraguay\"\n,\"Peru\"\n,\"Philippines\"\n,\"Poland\"\n,\"Portugal\"\n,\"Qatar\"\n,\"Romania\"\n,\"Russia\"\n,\"Rwanda\"\n,\"Réunion\"\n,\"S. Korea\"\n,\"Saint Kitts and Nevis\"\n,\"Saint Lucia\"\n,\"Saint Martin\"\n,\"Saint Pierre Miquelon\"\n,\"Saint Vincent and the Grenadines\"\n,\"San Marino\"\n,\"Sao Tome and Principe\"\n,\"Saudi Arabia\"\n,\"Senegal\"\n,\"Serbia\"\n,\"Seychelles\"\n,\"Sierra Leone\"\n,\"Singapore\"\n,\"Sint Maarten\"\n,\"Slovakia\"\n,\"Slovenia\"\n,\"Solomon Islands\"\n,\"Somalia\"\n,\"South Africa\"\n,\"South Sudan\"\n,\"Spain\"\n,\"Sri Lanka\"\n,\"St. Barth\"\n,\"Sudan\"\n,\"Suriname\"\n,\"Swaziland\"\n,\"Sweden\"\n,\"Switzerland\"\n,\"Syrian Arab Republic\"\n,\"Taiwan\"\n,\"Tajikistan\"\n,\"Tanzania\"\n,\"Thailand\"\n,\"Timor-Leste\"\n,\"Togo\"\n,\"Trinidad and Tobago\"\n,\"Tunisia\"\n,\"Turkey\"\n,\"Turks and Caicos Islands\"\n,\"UAE\"\n,\"UK\"\n,\"USA\"\n,\"Uganda\"\n,\"Ukraine\"\n,\"Uruguay\"\n,\"Uzbekistan\"\n,\"Venezuela\"\n,\"Vietnam\"\n,\"Wallis and Futuna\"\n,\"Western Sahara\"\n,\"Yemen\"\n,\"Zambia\"\n,\"Zimbabwe\"]\n\nexport default countries;","import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport countries from \"../countries\";\n\nfunction CountrySpecific () {\n    const [country_covid19_data, update_country_covid19_data] = useState(\"\");\n    const [countryName, updateCountryName] = useState(\"\");\n    const [buttonPressed, updateButtonPress] = useState(false);\n\n    function numberWithCommas(x) {\n        if (x) {\n            return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"); \n        }\n    }\n\n    function fetchName (event) {\n        let userCountryName = event.target.value;\n        userCountryName = userCountryName.charAt(0).toUpperCase() + userCountryName.slice(1, userCountryName.length).toLowerCase();\n        updateCountryName(userCountryName);\n        console.log(userCountryName);\n        updateButtonPress(false);\n    }\n\n    function handleButton() {\n        updateButtonPress(true);\n    }\n\n    useEffect(() => {\n        axios.get(\"https://corona.lmao.ninja/v3/covid-19/countries#\")\n        .then(function(response) {\n            response.data.forEach((x, i) => {\n                if (countryName === x.country) {\n                    const data_received = response.data[i];\n                    update_country_covid19_data(data_received);\n                } \n            })           \n        })\n        .catch(function(error) {\n            console.log(error);\n        });\n    }, [countryName]);\n\n    var date = new Date(country_covid19_data.updated).toString();\n\n    return (\n        <div className = \"country-info-display\">\n            <input class = \"input-box\" type=\"text\" placeholder=\"Search for a country\" onChange={fetchName} value={countryName}></input>\n            <button class = \"input-box\" onClick = {handleButton}>Submit</button>\n            {(buttonPressed && countries.includes(countryName)) ?\n\n            <div className = \"worldinfo-table\">\n                \n                <h1 className = \"section-heading\">{country_covid19_data.country} ({country_covid19_data.continent})</h1>\n                <h2 className = \"worldinfo-latest-time\">Last Updated: {date}</h2>\n                <table className = \"table-container\">\n                    <tr>\n                        <td>Cases</td>\n                        <td>Active</td>\n                        <td>Recovered</td>\n                        <td>Recovered today</td>\n                        <td>Critical</td>\n                        <td>Deaths</td>\n                        <td>Deaths today</td>\n                    </tr>\n\n                    <tr>\n                        <td>{numberWithCommas(country_covid19_data.cases)}</td>\n                        <td>{numberWithCommas(country_covid19_data.active)}</td>\n                        <td>{numberWithCommas(country_covid19_data.recovered)}</td>\n                        <td>{numberWithCommas(country_covid19_data.todayRecovered)}</td>\n                        <td>{numberWithCommas(country_covid19_data.critical)}</td>\n                        <td>{numberWithCommas(country_covid19_data.deaths)}</td>\n                        <td>{numberWithCommas(country_covid19_data.todayDeaths)}</td>\n                    </tr>\n                </table>\n            </div>\n            :\n            <h1 className = \"warning\">Please make sure you enter the country name correctly.</h1>}\n        </div>\n    );\n}\n\nexport default CountrySpecific;","import React from \"react\";\n\nfunction Copyright() {\n    var year = new Date().getFullYear();\n    console.log(year);\n    return (\n        <div>\n            <p>Built with love, caffeine and React. Copyright ©️ {year} Fardin Khan.</p>\n        </div>\n    );\n}\n\nexport default Copyright;","import React from \"react\";\nimport \"../index.css\";\nimport Worldwide from \"./Worldwide\";\nimport CountrySpecific from \"./CountrySpecific\";\nimport Copyright from \"./Copyright\";\n\nfunction App (){\n    return (\n        <div>\n            <h1 className = \"heading\">COVID-19 Tracker</h1>\n            <Worldwide />\n            <CountrySpecific />\n            <footer>\n                <Copyright />\n            </footer>\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./components/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}